CREATE OR REPLACE PROCEDURE SYSTEM.PRC_AGG_SLS_DLY_WMY ( I_DATE_KEY NUMBER)
AS 
S_DATE        INTEGER;
WTD_END_DATE  INTEGER;
WTD_STR_DATE  INTEGER;
MTD_END_DATE  INTEGER;
MTD_STR_DATE  INTEGER;
YTD_END_DATE  INTEGER;
YTD_STR_DATE  INTEGER;
QTR_END_DATE  INTEGER;
QTR_STR_DATE  INTEGER;
HAF_END_DATE  INTEGER;
HAF_STR_DATE  INTEGER;

BEGIN 

SELECT 
TO_CHAR(S_DATE ,'YYYYMMDD')            S_DATE,
TO_CHAR(WTD_END_DATE,'YYYYMMDD')   WTD_END_DATE,
TO_CHAR(WTD_STR_DATE,'YYYYMMDD')   WTD_STR_DATE,
TO_CHAR(MTD_END_DATE,'YYYYMMDD')   MTD_END_DATE,
TO_CHAR(MTD_STR_DATE,'YYYYMMDD')   MTD_STR_DATE,
TO_CHAR(YTD_END_DATE,'YYYYMMDD')   YTD_END_DATE,
TO_CHAR(YTD_STR_DATE,'YYYYMMDD')   YTD_STR_DATE,
TO_CHAR(QTR_END_DATE,'YYYYMMDD')   QTR_END_DATE,
TO_CHAR(QTR_STR_DATE,'YYYYMMDD')   QTR_STR_DATE,
TO_CHAR(HAF_END_DATE,'YYYYMMDD')   HAF_END_DATE,
TO_CHAR(HAF_STR_DATE,'YYYYMMDD')   HAF_STR_DATE
INTO 
S_DATE,
WTD_END_DATE,
WTD_STR_DATE,
MTD_END_DATE,
MTD_STR_DATE,
YTD_END_DATE,
YTD_STR_DATE,
QTR_END_DATE,
QTR_STR_DATE,
HAF_END_DATE,
HAF_STR_DATE
FROM  (
WITH  TMP  AS 
(
SELECT  TO_DATE(I_DATE_KEY,'YYYYMMDD') AS GVN_DATE  FROM  DUAL
)
SELECT  (SELECT GVN_DATE FROM  TMP ) AS S_DATE ,
(SELECT  MAX(D_DATE)  WTD_END_DATE  FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS WTD_END_DATE ,
(SELECT  MIN(D_DATE)WTD_STR_DATE   FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)))  AS WTD_STR_DATE,
(SELECT  MAX(D_DATE) MTD_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_END_DATE,
(SELECT  MIN(D_DATE)MTD_STR_DATE  FROM  DIM_DATE 
WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_STR_DATE,
(SELECT  MAX(D_DATE) YTD_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARYEAR) IN(
SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS  YTD_END_DATE,
(SELECT  MIN(D_DATE)YTD_STR_DATE   FROM  DIM_DATE 
WHERE  (CALENDARYEAR) IN(
SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS YTD_STR_DATE,
(SELECT  MAX(D_DATE) QTR_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_END_DATE,
(SELECT  MIN(D_DATE)QTR_STR_DATE   FROM  DIM_DATE 
WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_STR_DATE,
(SELECT  MAX(D_DATE) HAF_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)) ) AS HAF_END_DATE,
(SELECT  MIN(D_DATE)HAF_STR_DATE  FROM  DIM_DATE 
WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))
) AS HAF_STR_DATE
FROM  DUAL
);



BEGIN
EXECUTE  IMMEDIATE 'DROP  TABLE AGG_SLS_DLY_WMY_DAY';
EXCEPTION  WHEN  OTHERS THEN NULL; 
END;



EXECUTE IMMEDIATE ' CREATE TABLE  AGG_SLS_DLY_WMY_DAY AS 
SELECT 
'||S_DATE||' AS SDATE, 
STORENAME, 
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(UNITCOST,0)	              ELSE  0 END )    UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    WTD_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    MTD_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    QTR_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    HAF_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    YTD_UNITCOST	,
---------------------------------------                                                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   RETURAMOUNT    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   WTD_RETURAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   MTD_RETURAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   QTR_RETURAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   HAF_RETURAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURAMOUNT,0)		      ELSE  0 END )	   YTD_RETURAMOUNT,
--------------------------------------- 	                      
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    DISCOUNTQUANTITY  	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    WTD_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    MTD_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    QTR_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    HAF_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    YTD_DISCOUNTQUANTITY	,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    DISCOUNTAMOUNT    	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    WTD_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    MTD_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    QTR_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    HAF_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    YTD_DISCOUNTAMOUNT	,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    TOTALCOST	        ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    WTD_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    MTD_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    QTR_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    HAF_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    YTD_TOTALCOST	    ,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    SALESAMOUNT   	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    WTD_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    MTD_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    QTR_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    HAF_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    YTD_SALESAMOUNT	    
FROM C##ASLAM.FACT_SALES FCT,
     C##ASLAM.DIM_STORE DS,
     C##ASLAM.DIM_DATE DD
WHERE  FCT.STOREKEY=DS.STOREKEY
AND FCT.SDATE=DD.D_DATE
GROUP  BY  STORENAME ';





END;
/
