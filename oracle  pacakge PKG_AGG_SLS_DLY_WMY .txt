CREATE OR REPLACE PACKAGE SYSTEM.PKG_AGG_SLS_DLY_WMY 
AS 
 

   PROCEDURE  PRC_AGG_SLS_DLY_WMY_LGC (MIN_DATE_KEY  INTEGER ,MAX_DATE_KEY INTEGER, P_IND  VARCHAR2);
   PROCEDURE  PRC_AGG_SLS_DLY_WMY_TMP (S_DATE_KEY INTEGER);
   PROCEDURE PRC_AGG_SLS_DLY_WMY_INC (S_DATE_KEY INTEGER );
   PROCEDURE PRC_AGG_SLS_DLY_WMY_FNL (S_DATE_KEY INTEGER );
   PROCEDURE  PRC_AGG_SLS_DLY_WMY_DAY ( I_DATE_KEY NUMBER);
     
END PKG_AGG_SLS_DLY_WMY;
/



CREATE OR REPLACE PACKAGE BODY SYSTEM.PKG_AGG_SLS_DLY_WMY 
AS 
 

   PROCEDURE  PRC_AGG_SLS_DLY_WMY_LGC (MIN_DATE_KEY  INTEGER ,MAX_DATE_KEY INTEGER, P_IND  VARCHAR2)
   AS
   BEGIN 
    IF  (P_IND ='R')  THEN 
	
	
     PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_DAY ( MIN_DATE_KEY);
     
     EXECUTE  IMMEDIATE  'DELETE   FROM AGG_SLS_DLY_WMY 
                          WHERE SDATE=TO_DATE('||MIN_DATE_KEY||',''YYYYMMDD'')';
     
     EXECUTE  IMMEDIATE  'INSERT  INTO AGG_SLS_DLY_WMY 
                          SELECT  *  FROM AGG_SLS_DLY_WMY_DAY ';
     
     COMMIT;                     
	 
	 FOR  I  IN (SELECT  TO_CHAR(D_DATE,'YYYYMMDD') D_DATE FROM DIM_DATE  
				WHERE  D_DATE  BETWEEN  (TO_DATE(MIN_DATE_KEY,'YYYYMMDD')+1 ) AND  TO_DATE(MAX_DATE_KEY,'YYYYMMDD') 
							ORDER BY  1 
			 )
			
     LOOP 
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_TMP (I.D_DATE);
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_INC (I.D_DATE);
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_FNL (I.D_DATE);

     END LOOP;	  
	 
	ELSIF (P_IND ='I') THEN 
	    FOR  I  IN (SELECT  TO_CHAR(D_DATE,'YYYYMMDD') D_DATE FROM DIM_DATE  
				WHERE  D_DATE  BETWEEN  (TO_DATE(MIN_DATE_KEY,'YYYYMMDD') ) AND  TO_DATE(MAX_DATE_KEY,'YYYYMMDD') 
							ORDER BY  1 
			 )
			
     LOOP 
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_TMP (I.D_DATE);
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_INC (I.D_DATE);
	   PKG_AGG_SLS_DLY_WMY.PRC_AGG_SLS_DLY_WMY_FNL (I.D_DATE);

     END LOOP;
	 
	
	 
   
    END IF;
   END;
   

   PROCEDURE  PRC_AGG_SLS_DLY_WMY_TMP (S_DATE_KEY INTEGER)
   AS 
   
   BEGIN 
     BEGIN 
	 EXECUTE IMMEDIATE 'DROP  TABLE  AGG_SLS_DLY_WMY_TMP';
	 EXCEPTION WHEN  OTHERS  THEN  NULL;
	 END;
   
   
    EXECUTE IMMEDIATE 'CREATE  TABLE  AGG_SLS_DLY_WMY_TMP AS 
	        SELECT
                  SDATE,
				  FCT.STOREKEY,
				  STORENAME,
                  sum(UNITCOST          ) as UNITCOST        ,
                  sum(UNITPRICE         ) as UNITPRICE       ,
                  sum(SALESQUANTITY     ) as SALESQUANTITY   ,
                  sum(RETURNQUANTITY    ) as RETURNQUANTITY  ,
                  sum(RETURNAMOUNT       ) as RETURNAMOUNT     ,
                  sum(DISCOUNTQUANTITY  ) as DISCOUNTQUANTITY,
                  sum(DISCOUNTAMOUNT    ) as DISCOUNTAMOUNT  ,
                  sum(TOTALCOST         ) as TOTALCOST       ,
                  sum(SALESAMOUNT       ) as SALESAMOUNT       
                  from C##SARATH.FCT_SLS_2007 fct ,
                       C##SARATH.dim_store  DS
                  WHERE FCT.STOREKEY=DS.STOREKEY
                  AND  SDATE= TO_DATE('||S_DATE_KEY||',''YYYYMMDD'')
                  GROUP  BY SDATE,
				  FCT.STOREKEY,
				  STORENAME ' ;
   
   
   
   
   END;
   
   PROCEDURE PRC_AGG_SLS_DLY_WMY_INC (S_DATE_KEY INTEGER )
   AS 
            S_DATE        INTEGER;
            WTD_END_DATE  INTEGER;
            WTD_STR_DATE  INTEGER;
            MTD_END_DATE  INTEGER;
            MTD_STR_DATE  INTEGER;
            YTD_END_DATE  INTEGER;
            YTD_STR_DATE  INTEGER;
            QTR_END_DATE  INTEGER;
            QTR_STR_DATE  INTEGER;
            HAF_END_DATE  INTEGER;
            HAF_STR_DATE  INTEGER;
            
    BEGIN 
            
            SELECT 
            TO_CHAR(S_DATE ,'YYYYMMDD')            S_DATE,
            TO_CHAR(WTD_END_DATE,'YYYYMMDD')   WTD_END_DATE,
            TO_CHAR(WTD_STR_DATE,'YYYYMMDD')   WTD_STR_DATE,
            TO_CHAR(MTD_END_DATE,'YYYYMMDD')   MTD_END_DATE,
            TO_CHAR(MTD_STR_DATE,'YYYYMMDD')   MTD_STR_DATE,
            TO_CHAR(YTD_END_DATE,'YYYYMMDD')   YTD_END_DATE,
            TO_CHAR(YTD_STR_DATE,'YYYYMMDD')   YTD_STR_DATE,
            TO_CHAR(QTR_END_DATE,'YYYYMMDD')   QTR_END_DATE,
            TO_CHAR(QTR_STR_DATE,'YYYYMMDD')   QTR_STR_DATE,
            TO_CHAR(HAF_END_DATE,'YYYYMMDD')   HAF_END_DATE,
            TO_CHAR(HAF_STR_DATE,'YYYYMMDD')   HAF_STR_DATE
            INTO 
            S_DATE,
            WTD_END_DATE,
            WTD_STR_DATE,
            MTD_END_DATE,
            MTD_STR_DATE,
            YTD_END_DATE,
            YTD_STR_DATE,
            QTR_END_DATE,
            QTR_STR_DATE,
            HAF_END_DATE,
            HAF_STR_DATE
            FROM  (
            WITH  TMP  AS 
            (
            SELECT  TO_DATE(S_DATE_KEY,'YYYYMMDD') AS GVN_DATE  FROM  DUAL
            )
            SELECT  (SELECT GVN_DATE FROM  TMP ) AS S_DATE ,
            (SELECT  MAX(D_DATE)  WTD_END_DATE  FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
            SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS WTD_END_DATE ,
            (SELECT  MIN(D_DATE)WTD_STR_DATE   FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
            SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)))  AS WTD_STR_DATE,
            (SELECT  MAX(D_DATE) MTD_END_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
            SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_END_DATE,
            (SELECT  MIN(D_DATE)MTD_STR_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
            SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_STR_DATE,
            (SELECT  MAX(D_DATE) YTD_END_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARYEAR) IN(
            SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS  YTD_END_DATE,
            (SELECT  MIN(D_DATE)YTD_STR_DATE   FROM  DIM_DATE 
            WHERE  (CALENDARYEAR) IN(
            SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS YTD_STR_DATE,
            (SELECT  MAX(D_DATE) QTR_END_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
            SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_END_DATE,
            (SELECT  MIN(D_DATE)QTR_STR_DATE   FROM  DIM_DATE 
            WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
            SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_STR_DATE,
            (SELECT  MAX(D_DATE) HAF_END_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
            SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)) ) AS HAF_END_DATE,
            (SELECT  MIN(D_DATE)HAF_STR_DATE  FROM  DIM_DATE 
            WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
            SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))
            ) AS HAF_STR_DATE
            FROM  DUAL
            );
            
            
            BEGIN 
                  EXECUTE IMMEDIATE 'DROP  TABLE  AGG_SLS_DLY_WMY_INC ';
                      EXCEPTION  WHEN  OTHERS  THEN 
             		   NULL;
            END;
      
      EXECUTE IMMEDIATE 'CREATE  TABLE  AGG_SLS_DLY_WMY_INC AS 	  
                   SELECT  
                   TO_DATE('||S_DATE||',''YYYYMMDD'')		SDATE	,
                   STORENAME		STORENAME	,
                   SUM(UNITCOST	)			UNITCOST	,
                   SUM(WTD_UNITCOST)		WTD_UNITCOST	,
                   SUM(MTD_UNITCOST)		MTD_UNITCOST	,
                   SUM(QTR_UNITCOST)		QTR_UNITCOST	,
                   SUM(HAF_UNITCOST)		HAF_UNITCOST	,
                   SUM(YTD_UNITCOST)		YTD_UNITCOST	,
                   SUM(RETURNAMOUNT		)		RETURNAMOUNT	,
                   SUM(WTD_RETURNAMOUNT	)	WTD_RETURNAMOUNT	,
                   SUM(MTD_RETURNAMOUNT	)	MTD_RETURNAMOUNT	,
                   SUM(QTR_RETURNAMOUNT	)	QTR_RETURNAMOUNT	,
                   SUM(HAF_RETURNAMOUNT	)	HAF_RETURNAMOUNT	,
                   SUM(YTD_RETURNAMOUNT	)	YTD_RETURNAMOUNT	,
                   SUM(DISCOUNTQUANTITY	)			DISCOUNTQUANTITY	,
                   SUM(WTD_DISCOUNTQUANTITY)		WTD_DISCOUNTQUANTITY	,
                   SUM(MTD_DISCOUNTQUANTITY)		MTD_DISCOUNTQUANTITY	,
                   SUM(QTR_DISCOUNTQUANTITY)		QTR_DISCOUNTQUANTITY	,
                   SUM(HAF_DISCOUNTQUANTITY)		HAF_DISCOUNTQUANTITY	,
                   SUM(YTD_DISCOUNTQUANTITY)		YTD_DISCOUNTQUANTITY	,
                   SUM(DISCOUNTAMOUNT		)		DISCOUNTAMOUNT	,
                   SUM(WTD_DISCOUNTAMOUNT	)	WTD_DISCOUNTAMOUNT	,
                   SUM(MTD_DISCOUNTAMOUNT	)	MTD_DISCOUNTAMOUNT	,
                   SUM(QTR_DISCOUNTAMOUNT	)	QTR_DISCOUNTAMOUNT	,
                   SUM(HAF_DISCOUNTAMOUNT	)	HAF_DISCOUNTAMOUNT	,
                   SUM(YTD_DISCOUNTAMOUNT	)	YTD_DISCOUNTAMOUNT	,
                   SUM(TOTALCOST)			TOTALCOST	,
                   SUM(WTD_TOTALCOST)		WTD_TOTALCOST	,
                   SUM(MTD_TOTALCOST)		MTD_TOTALCOST	,
                   SUM(QTR_TOTALCOST)		QTR_TOTALCOST	,
                   SUM(HAF_TOTALCOST)		HAF_TOTALCOST	,
                   SUM(YTD_TOTALCOST)		YTD_TOTALCOST	,
                   SUM(SALESAMOUNT	)	SALESAMOUNT	,
                   SUM(WTD_SALESAMOUNT)		WTD_SALESAMOUNT	,
                   SUM(MTD_SALESAMOUNT)		MTD_SALESAMOUNT	,
                   SUM(QTR_SALESAMOUNT)		QTR_SALESAMOUNT	,
                   SUM(HAF_SALESAMOUNT)		HAF_SALESAMOUNT	,
                   SUM(YTD_SALESAMOUNT)		YTD_SALESAMOUNT	
                   FROM (	  
                   SELECT 
                   STORENAME, 
                   0																												    UNITCOST	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(UNITCOST,0)	         END      WTD_UNITCOST	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(UNITCOST,0)	         END      MTD_UNITCOST	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(UNITCOST,0)	         END      QTR_UNITCOST	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(UNITCOST,0)	         END      HAF_UNITCOST	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(UNITCOST,0)	         END      YTD_UNITCOST	,
                   -----------------------------------                                                                        
                   0										   													  			 	       RETURNAMOUNT    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(RETURNAMOUNT,0)	     END  	   WTD_RETURNAMOUNT,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(RETURNAMOUNT,0)	     END  	   MTD_RETURNAMOUNT,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(RETURNAMOUNT,0)	     END  	   QTR_RETURNAMOUNT,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(RETURNAMOUNT,0)	     END  	   HAF_RETURNAMOUNT,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(RETURNAMOUNT,0)	     END  	   YTD_RETURNAMOUNT,
                   ----------------------------------- 	                                                                      
                   0																										 	      DISCOUNTQUANTITY  	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTQUANTITY,0)	 END      WTD_DISCOUNTQUANTITY	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTQUANTITY,0)	 END      MTD_DISCOUNTQUANTITY	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTQUANTITY,0)	 END      QTR_DISCOUNTQUANTITY	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTQUANTITY,0)	 END      HAF_DISCOUNTQUANTITY	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTQUANTITY,0)	 END      YTD_DISCOUNTQUANTITY	,
                   -----------------------------------                                 
                   0																												      DISCOUNTAMOUNT    	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTAMOUNT,0)	     END     WTD_DISCOUNTAMOUNT	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTAMOUNT,0)	     END     MTD_DISCOUNTAMOUNT	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTAMOUNT,0)	     END     QTR_DISCOUNTAMOUNT	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTAMOUNT,0)	     END     HAF_DISCOUNTAMOUNT	,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(DISCOUNTAMOUNT,0)	     END     YTD_DISCOUNTAMOUNT	,
                   -----------------------------------                                 
                   0																											      TOTALCOST	        ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(TOTALCOST,0)	         END     WTD_TOTALCOST	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(TOTALCOST,0)	         END     MTD_TOTALCOST	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(TOTALCOST,0)	         END     QTR_TOTALCOST	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(TOTALCOST,0)	         END     HAF_TOTALCOST	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(TOTALCOST,0)	         END     YTD_TOTALCOST	    ,
                   -----------------------------------                                  
                   0																											         SALESAMOUNT   	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||WTD_END_DATE||'  THEN  0  ELSE  NVL(SALESAMOUNT,0)	         END     WTD_SALESAMOUNT	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||MTD_END_DATE||'  THEN  0  ELSE  NVL(SALESAMOUNT,0)	         END     MTD_SALESAMOUNT	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||QTR_END_DATE||'  THEN  0  ELSE  NVL(SALESAMOUNT,0)	         END     QTR_SALESAMOUNT	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||HAF_END_DATE||'  THEN  0  ELSE  NVL(SALESAMOUNT,0)	         END     HAF_SALESAMOUNT	    ,
                   CASE  WHEN TO_CHAR(SDATE,''YYYYMMDD'') = '||YTD_END_DATE||'  THEN  0  ELSE  NVL(SALESAMOUNT,0)	         END     YTD_SALESAMOUNT	    
                   FROM  AGG_SLS_DLY_WMY 
                   WHERE  SDATE= TO_DATE('||S_DATE_KEY||',''YYYYMMDD'')-1
                   UNION  ALL 
                   SELECT  
                   STORENAME	AS	STORENAME	,
                   UNITCOST	AS	UNITCOST	,
                   UNITCOST	AS	WTD_UNITCOST	,
                   UNITCOST	AS	MTD_UNITCOST	,
                   UNITCOST	AS	QTR_UNITCOST	,
                   UNITCOST	AS	HAF_UNITCOST	,
                   UNITCOST	AS	YTD_UNITCOST	,
                   RETURNAMOUNT	AS	RETURNAMOUNT	,
                   RETURNAMOUNT	AS	WTD_RETURNAMOUNT	,
                   RETURNAMOUNT	AS	MTD_RETURNAMOUNT	,
                   RETURNAMOUNT	AS	QTR_RETURNAMOUNT	,
                   RETURNAMOUNT	AS	HAF_RETURNAMOUNT	,
                   RETURNAMOUNT	AS	YTD_RETURNAMOUNT	,
                   DISCOUNTQUANTITY	AS	DISCOUNTQUANTITY	,
                   DISCOUNTQUANTITY	AS	WTD_DISCOUNTQUANTITY	,
                   DISCOUNTQUANTITY	AS	MTD_DISCOUNTQUANTITY	,
                   DISCOUNTQUANTITY	AS	QTR_DISCOUNTQUANTITY	,
                   DISCOUNTQUANTITY	AS	HAF_DISCOUNTQUANTITY	,
                   DISCOUNTQUANTITY	AS	YTD_DISCOUNTQUANTITY	,
                   DISCOUNTAMOUNT	AS	DISCOUNTAMOUNT	,
                   DISCOUNTAMOUNT	AS	WTD_DISCOUNTAMOUNT	,
                   DISCOUNTAMOUNT	AS	MTD_DISCOUNTAMOUNT	,
                   DISCOUNTAMOUNT	AS	QTR_DISCOUNTAMOUNT	,
                   DISCOUNTAMOUNT	AS	HAF_DISCOUNTAMOUNT	,
                   DISCOUNTAMOUNT	AS	YTD_DISCOUNTAMOUNT	,
                   TOTALCOST	AS	TOTALCOST	,
                   TOTALCOST	AS	WTD_TOTALCOST	,
                   TOTALCOST	AS	MTD_TOTALCOST	,
                   TOTALCOST	AS	QTR_TOTALCOST	,
                   TOTALCOST	AS	HAF_TOTALCOST	,
                   TOTALCOST	AS	YTD_TOTALCOST	,
                   SALESAMOUNT	AS	SALESAMOUNT	,
                   SALESAMOUNT	AS	WTD_SALESAMOUNT	,
                   SALESAMOUNT	AS	MTD_SALESAMOUNT	,
                   SALESAMOUNT	AS	QTR_SALESAMOUNT	,
                   SALESAMOUNT	AS	HAF_SALESAMOUNT	,
                   SALESAMOUNT	AS	YTD_SALESAMOUNT	
                   FROM AGG_SLS_DLY_WMY_TMP 
                   )
                   GROUP  BY   STORENAME ';
     END;
   
   
   PROCEDURE PRC_AGG_SLS_DLY_WMY_FNL (S_DATE_KEY INTEGER )
   AS 
   BEGIN 
   
      
      EXECUTE IMMEDIATE 'DELETE FROM  AGG_SLS_DLY_WMY
                          WHERE SDATE= TO_DATE('||S_DATE_KEY||',''YYYYMMDD'')';
	  
      EXECUTE IMMEDIATE 'INSERT  INTO  AGG_SLS_DLY_WMY 
	 SELECT  *  FROM AGG_SLS_DLY_WMY_INC';
   
   END;
   


PROCEDURE PRC_AGG_SLS_DLY_WMY_DAY ( I_DATE_KEY NUMBER)
AS 
S_DATE        INTEGER;
WTD_END_DATE  INTEGER;
WTD_STR_DATE  INTEGER;
MTD_END_DATE  INTEGER;
MTD_STR_DATE  INTEGER;
YTD_END_DATE  INTEGER;
YTD_STR_DATE  INTEGER;
QTR_END_DATE  INTEGER;
QTR_STR_DATE  INTEGER;
HAF_END_DATE  INTEGER;
HAF_STR_DATE  INTEGER;

BEGIN 

SELECT 
TO_CHAR(S_DATE ,'YYYYMMDD')            S_DATE,
TO_CHAR(WTD_END_DATE,'YYYYMMDD')   WTD_END_DATE,
TO_CHAR(WTD_STR_DATE,'YYYYMMDD')   WTD_STR_DATE,
TO_CHAR(MTD_END_DATE,'YYYYMMDD')   MTD_END_DATE,
TO_CHAR(MTD_STR_DATE,'YYYYMMDD')   MTD_STR_DATE,
TO_CHAR(YTD_END_DATE,'YYYYMMDD')   YTD_END_DATE,
TO_CHAR(YTD_STR_DATE,'YYYYMMDD')   YTD_STR_DATE,
TO_CHAR(QTR_END_DATE,'YYYYMMDD')   QTR_END_DATE,
TO_CHAR(QTR_STR_DATE,'YYYYMMDD')   QTR_STR_DATE,
TO_CHAR(HAF_END_DATE,'YYYYMMDD')   HAF_END_DATE,
TO_CHAR(HAF_STR_DATE,'YYYYMMDD')   HAF_STR_DATE
INTO 
S_DATE,
WTD_END_DATE,
WTD_STR_DATE,
MTD_END_DATE,
MTD_STR_DATE,
YTD_END_DATE,
YTD_STR_DATE,
QTR_END_DATE,
QTR_STR_DATE,
HAF_END_DATE,
HAF_STR_DATE
FROM  (
WITH  TMP  AS 
(
SELECT  TO_DATE(I_DATE_KEY,'YYYYMMDD') AS GVN_DATE  FROM  DUAL
)
SELECT  (SELECT GVN_DATE FROM  TMP ) AS S_DATE ,
(SELECT  MAX(D_DATE)  WTD_END_DATE  FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS WTD_END_DATE ,
(SELECT  MIN(D_DATE)WTD_STR_DATE   FROM  DIM_DATE WHERE  (CALENDARWEEK,CALENDARYEAR) IN (
SELECT  CALENDARWEEK,CALENDARYEAR AS WEEK  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)))  AS WTD_STR_DATE,
(SELECT  MAX(D_DATE) MTD_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_END_DATE,
(SELECT  MIN(D_DATE)MTD_STR_DATE  FROM  DIM_DATE 
WHERE  (CALENDARMONTH,CALENDARYEAR) IN(
SELECT  CALENDARMONTH,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS MTD_STR_DATE,
(SELECT  MAX(D_DATE) YTD_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARYEAR) IN(
SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS  YTD_END_DATE,
(SELECT  MIN(D_DATE)YTD_STR_DATE   FROM  DIM_DATE 
WHERE  (CALENDARYEAR) IN(
SELECT  CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS YTD_STR_DATE,
(SELECT  MAX(D_DATE) QTR_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_END_DATE,
(SELECT  MIN(D_DATE)QTR_STR_DATE   FROM  DIM_DATE 
WHERE  (CALENDARQUARTER,CALENDARYEAR) IN(
SELECT  CALENDARQUARTER,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))) AS QTR_STR_DATE,
(SELECT  MAX(D_DATE) HAF_END_DATE  FROM  DIM_DATE 
WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP)) ) AS HAF_END_DATE,
(SELECT  MIN(D_DATE)HAF_STR_DATE  FROM  DIM_DATE 
WHERE  (CALENDARHALFYEAR,CALENDARYEAR) IN(
SELECT  CALENDARHALFYEAR,CALENDARYEAR AS MONTH  FROM  DIM_DATE WHERE  D_DATE=(SELECT  GVN_DATE FROM  TMP))
) AS HAF_STR_DATE
FROM  DUAL
);



BEGIN
EXECUTE  IMMEDIATE 'DROP  TABLE AGG_SLS_DLY_WMY_DAY';
EXCEPTION  WHEN  OTHERS THEN NULL; 
END;



EXECUTE IMMEDIATE ' CREATE TABLE  AGG_SLS_DLY_WMY_DAY AS 
SELECT 
TO_DATE('||S_DATE||',''YYYYMMDD'') AS SDATE, 
STORENAME, 
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(UNITCOST,0)	              ELSE  0 END )    UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    WTD_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    MTD_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    QTR_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    HAF_UNITCOST	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(UNITCOST,0)	              ELSE  0 END )    YTD_UNITCOST	,
---------------------------------------                                                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   RETURNAMOUNT    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   WTD_RETURNAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   MTD_RETURNAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   QTR_RETURNAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   HAF_RETURNAMOUNT,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(RETURNAMOUNT,0)		      ELSE  0 END )	   YTD_RETURNAMOUNT,
--------------------------------------- 	                      
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    DISCOUNTQUANTITY  	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    WTD_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    MTD_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    QTR_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    HAF_DISCOUNTQUANTITY	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTQUANTITY,0)	  ELSE  0 END )    YTD_DISCOUNTQUANTITY	,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    DISCOUNTAMOUNT    	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    WTD_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    MTD_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    QTR_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    HAF_DISCOUNTAMOUNT	,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(DISCOUNTAMOUNT,0)	      ELSE  0 END )    YTD_DISCOUNTAMOUNT	,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    TOTALCOST	        ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    WTD_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    MTD_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    QTR_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    HAF_TOTALCOST	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(TOTALCOST,0)	          ELSE  0 END )    YTD_TOTALCOST	    ,
---------------------------------------                           
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'')='||S_DATE||'                                 THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    SALESAMOUNT   	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||WTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    WTD_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||MTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    MTD_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||QTR_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    QTR_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||HAF_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    HAF_SALESAMOUNT	    ,
SUM(CASE  WHEN TO_CHAR(D_DATE,''YYYYMMDD'') BETWEEN '||YTD_STR_DATE||' AND '||S_DATE ||' THEN  NVL(SALESAMOUNT,0)	          ELSE  0 END )    YTD_SALESAMOUNT	    
FROM C##SARATH.FCT_SLS_2007 FCT,
     C##SARATH.DIM_STORE DS,
     C##SARATH.DIM_DATE DD
WHERE  FCT.STOREKEY=DS.STOREKEY
AND FCT.SDATE=DD.D_DATE
GROUP  BY  STORENAME ';





END;      
   


END PKG_AGG_SLS_DLY_WMY;
/